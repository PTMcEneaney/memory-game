{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\paget\\\\homework\\\\memory-game\\\\src\\\\components\\\\Tile\\\\index.js\",\"C:\\\\Users\\\\paget\\\\homework\\\\memory-game\\\\src\\\\components\\\\Wrapper\\\\index.js\",\"C:\\\\Users\\\\paget\\\\homework\\\\memory-game\\\\src\\\\components\\\\Jumbotron\\\\index.js\",\"C:\\\\Users\\\\paget\\\\homework\\\\memory-game\\\\src\\\\components\\\\Counter\\\\index.js\",\"C:\\\\Users\\\\paget\\\\homework\\\\memory-game\\\\src\\\\App.js\",\"C:\\\\Users\\\\paget\\\\homework\\\\memory-game\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\paget\\\\homework\\\\memory-game\\\\src\\\\index.js\"],\"names\":[\"Tile\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"onClick\",\"alt\",\"name\",\"src\",\"image\",\"Wrapper\",\"children\",\"Jumbotron\",\"Counter\",\"current\",\"high\",\"App\",\"state\",\"tiles\",\"random\",\"tilesTransformed\",\"_this\",\"map\",\"tile\",\"sortNum\",\"Math\",\"floor\",\"sortedTiles\",\"_\",\"sortBy\",\"setState\",\"resetChosen\",\"chosenTiles\",\"chosen\",\"handleClick\",\"objectid\",\"index\",\"findIndex\",\"x\",\"id\",\"alert\",\"this\",\"bind\",\"_this2\",\"components_Counter\",\"components_Jumbotron\",\"components_Wrapper\",\"components_Tile\",\"key\",\"React\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\r\\nimport \\\"./style.css\\\";\\r\\n\\r\\n\\r\\nfunction Tile(props) {\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"card button\\\" onClick={props.onClick}>\\r\\n            <div className=\\\"img-container\\\">\\r\\n                <img alt={props.name} src={props.image} className=\\\"bookImg\\\" />\\r\\n            </div>\\r\\n        {/* <span onClick={() => props.removeTile(props.id)} className=\\\"remove\\\">ùòÖ</span> */}\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default Tile;\",\"import React from \\\"react\\\";\\nimport \\\"./style.css\\\";\\n\\nfunction Wrapper(props) {\\n  return <div className=\\\"wrapper container\\\">{props.children}</div>;\\n}\\n\\nexport default Wrapper;\\n\",\"import React from \\\"react\\\";\\r\\nimport \\\"./style.css\\\";\\r\\n\\r\\nfunction Jumbotron() {\\r\\n    return (\\r\\n        <div className=\\\"jumbotron jumbotron-fluid mt-5 bg-dark\\\">\\r\\n            <div className=\\\"container text-center\\\">\\r\\n                <h1 className=\\\"display-4\\\">Bookworm!</h1>\\r\\n                <p className=\\\"lead\\\">Test your memory! Can you click all 12 books without any duplicates?</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default Jumbotron;\",\"import React from \\\"react\\\";\\r\\nimport \\\"./style.css\\\";\\r\\n\\r\\n\\r\\nfunction Counter(props) {\\r\\n    return(\\r\\n        <nav className=\\\"navbar fixed-top navbar-light bg-light\\\">\\r\\n            <div className=\\\"container\\\">\\r\\n                <div className=\\\"float-left\\\">\\r\\n                    <h2>Bookworm</h2>\\r\\n                </div>\\r\\n                <div className=\\\"float-right\\\">\\r\\n                    <h3>Score: {props.current} | High Score: {props.high}</h3>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nav>\\r\\n        )\\r\\n    }\\r\\n\\r\\n\\r\\nexport default Counter;\",\"import Tile from \\\"./components/Tile\\\";\\nimport Wrapper from \\\"./components/Wrapper\\\";\\nimport Jumbotron from \\\"./components/Jumbotron\\\";\\nimport Counter from \\\"./components/Counter\\\";\\nimport _ from \\\"lodash\\\";\\n\\nimport tiles from \\\"./tiles.json\\\";\\nimport React from 'react';\\nimport './index.css';\\n\\nclass App extends React.Component {\\n  // set initial state values\\n\\n  state = {\\n    current: 0,\\n    high: 0,\\n    tiles\\n  }\\n\\n  // randomzie books on load and bind click event\\n  componentDidMount() {\\n    this.random();\\n    this.handleClick = this.handleClick.bind(this);\\n  }\\n\\n  // randomize function that reorders the state.tiles \\n  random = () => {\\n    let randomFunc = () => {\\n      return Math.floor(Math.random() * 100)\\n    }\\n    let tilesTransformed = this.state.tiles;\\n    tilesTransformed.map(tile => {\\n      tile.sortNum = randomFunc();\\n      return tile;\\n    });\\n    let sortedTiles = _.sortBy(tilesTransformed, ['sortNum']);\\n\\n    this.setState({ tiles: sortedTiles})\\n  }\\n\\n  //reset state.tiles.chosen values to false when win/lose condition is met\\n  resetChosen = () => {\\n    let chosenTiles = this.state.tiles;\\n    chosenTiles.map(tile => {\\n      tile.chosen = false;\\n      return tile;\\n    });\\n    this.setState({ tiles: chosenTiles})\\n  }\\n  \\n  // onClick function whenever a book tile is clicked - controls both win and loss conditions\\n  handleClick = (objectid) => {\\n    let index = this.state.tiles.findIndex(x => x.id === objectid);\\n\\n    // if the clicked tile has not been clicked yet\\n    if (!this.state.tiles[index].chosen) {\\n      this.state.tiles[index].chosen = true\\n      this.setState( {tiles} );\\n\\n      //increasing current score (state variable)\\n      this.setState({ current: this.state.current + 1 })\\n\\n      // if user doesn't choose any dupes they win!\\n      if (this.state.current >= 12) {\\n        alert(\\\"You win!!\\\")\\n        this.setState({current: 0, high: 0})\\n        this.resetChosen();\\n      }\\n    } else {\\n      // if the clicked tile was already clicked\\n      alert(\\\"Oops! You already guessed that!\\\")\\n      if (this.state.current >= this.state.high) {\\n              //logging the highest score, and resetting current to 0\\n              this.setState({current: 0, high: this.state.current })\\n      } else {\\n              this.setState({current: 0})\\n      }\\n      this.resetChosen();\\n    }\\n    //after user guesses, randomize tile array no matter what\\n    this.random();\\n    }\\n\\n  render() {\\n    return (\\n      <div>\\n      <Counter current={this.state.current} high={this.state.high} />\\n      <Jumbotron /> \\n      <Wrapper>\\n        {this.state.tiles.map(tiles => (\\n            <Tile\\n            id={tiles.id}\\n            key={tiles.id}\\n            name={tiles.name}\\n            image={tiles.image}\\n            chosen={tiles.chosen}\\n            onClick={ () => this.handleClick(tiles.id) }\\n          />\\n        ))}\\n      </Wrapper>\\n      </div>\\n\\n    )\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,function(e){e.exports=[{id:1,name:\"1984\",image:\"/images/1984w.png\",chosen:!1},{id:2,name:\"2001 A Space Odessy\",image:\"/images/2001w.jpg\",chosen:!1},{id:3,name:\"A Clockwork Orange\",image:\"/images/aClockworkOrangew.jpg\",chosen:!1},{id:4,name:\"Do Androids Dream of Electric Sheep?\",image:\"/images/Androidsw.jpg\",chosen:!1},{id:5,name:\"Brave New World\",image:\"/images/BraveNewWorldw.jpg\",chosen:!1},{id:6,name:\"Cat's Cradle\",image:\"/images/CatsCradlew.jpg\",chosen:!1},{id:7,name:\"Dune\",image:\"/images/Dunew.jpg\",chosen:!1},{id:8,name:\"Farenheit 451\",image:\"/images/Farenheit451w.jpg\",chosen:!1},{id:9,name:\"The Hitchhikers Guide to the Galaxy\",image:\"/images/Hitchhikersw.png\",chosen:!1},{id:10,name:\"I, Robot\",image:\"/images/iRobotw.jpg\",chosen:!1},{id:11,name:\"Journey to the Center of the Earth\",image:\"/images/Journeyw.jpg\",chosen:!1},{id:12,name:\"The War of the Worlds\",image:\"/images/WarOfTheWorld.jpg\",chosen:!1}]},,,function(e,t,a){},,,,,,,,function(e,t,a){e.exports=a(22)},,,,,function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},,function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),i=a(5),o=a.n(i),s=(a(4),a(6)),c=a(7),l=a(10),m=a(8),h=a(11);a(17);var u=function(e){return r.a.createElement(\"div\",{className:\"card button\",onClick:e.onClick},r.a.createElement(\"div\",{className:\"img-container\"},r.a.createElement(\"img\",{alt:e.name,src:e.image,className:\"bookImg\"})))};a(18);var d=function(e){return r.a.createElement(\"div\",{className:\"wrapper container\"},e.children)};a(19);var g=function(){return r.a.createElement(\"div\",{className:\"jumbotron jumbotron-fluid mt-5 bg-dark\"},r.a.createElement(\"div\",{className:\"container text-center\"},r.a.createElement(\"h1\",{className:\"display-4\"},\"Bookworm!\"),r.a.createElement(\"p\",{className:\"lead\"},\"Test your memory! Can you click all 12 books without any duplicates?\")))};a(20);var f=function(e){return r.a.createElement(\"nav\",{className:\"navbar fixed-top navbar-light bg-light\"},r.a.createElement(\"div\",{className:\"container\"},r.a.createElement(\"div\",{className:\"float-left\"},r.a.createElement(\"h2\",null,\"Bookworm\")),r.a.createElement(\"div\",{className:\"float-right\"},r.a.createElement(\"h3\",null,\"Score: \",e.current,\" | High Score: \",e.high))))},p=a(9),w=a.n(p),v=a(1),k=function(e){function t(){var e,a;Object(s.a)(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(a=Object(l.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(r)))).state={current:0,high:0,tiles:v},a.random=function(){var e=a.state.tiles;e.map(function(e){return e.sortNum=Math.floor(100*Math.random()),e});var t=w.a.sortBy(e,[\"sortNum\"]);a.setState({tiles:t})},a.resetChosen=function(){var e=a.state.tiles;e.map(function(e){return e.chosen=!1,e}),a.setState({tiles:e})},a.handleClick=function(e){var t=a.state.tiles.findIndex(function(t){return t.id===e});a.state.tiles[t].chosen?(alert(\"Oops! You already guessed that!\"),a.state.current>=a.state.high?a.setState({current:0,high:a.state.current}):a.setState({current:0}),a.resetChosen()):(a.state.tiles[t].chosen=!0,a.setState({tiles:v}),a.setState({current:a.state.current+1}),a.state.current>=12&&(alert(\"You win!!\"),a.setState({current:0,high:0}),a.resetChosen())),a.random()},a}return Object(h.a)(t,e),Object(c.a)(t,[{key:\"componentDidMount\",value:function(){this.random(),this.handleClick=this.handleClick.bind(this)}},{key:\"render\",value:function(){var e=this;return r.a.createElement(\"div\",null,r.a.createElement(f,{current:this.state.current,high:this.state.high}),r.a.createElement(g,null),r.a.createElement(d,null,this.state.tiles.map(function(t){return r.a.createElement(u,{id:t.id,key:t.id,name:t.name,image:t.image,chosen:t.chosen,onClick:function(){return e.handleClick(t.id)}})})))}}]),t}(r.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(k,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[12,1,2]]]);","extractedComments":[]}