{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paget\\\\Homework\\\\memory-game\\\\src\\\\App.js\";\nimport Tile from \"./components/Tile\";\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Counter from \"./components/Counter\";\nimport _ from \"lodash\";\nimport tiles from \"./tiles.json\";\nimport React from 'react'; // import logo from './logo.svg';\n\nimport './index.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      tiles\n    };\n\n    this.random = () => {\n      let randomFunc = () => {\n        return Math.floor(Math.random() * 100);\n      };\n\n      let tilesTransformed = this.state.tiles;\n      tilesTransformed.map(tile => {\n        tile.sortNum = randomFunc();\n        return tile;\n      });\n\n      let sortedTiles = _.sortBy(tilesTransformed, ['sortNum']);\n\n      this.setState({\n        tiles: sortedTiles\n      });\n    };\n\n    this.handleClick = objectid => {\n      let index = this.state.tiles.findIndex(x => x.id === objectid);\n\n      if (!this.state.tiles[index].chosen) {\n        this.state.tiles[index].chosen = true;\n        this.setState({\n          tiles\n        });\n        console.log(this.state.tiles[index]);\n        this.setState({\n          score: score + 1\n        });\n        console.log(this.state.score);\n        this.random();\n      } else {\n        alert(\"already guessed!\");\n      } // this.state.tiles[index].chosen = true;\n\n    };\n  }\n\n  componentDidMount() {\n    this.random();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Counter, {\n      current: this.state.current,\n      high: this.state.high,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.tiles.map(tiles => React.createElement(Tile, {\n      id: tiles.id,\n      key: tiles.id,\n      name: tiles.name,\n      image: tiles.image,\n      chosen: tiles.chosen,\n      onClick: () => this.handleClick(tiles.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\paget\\Homework\\memory-game\\src\\App.js"],"names":["Tile","Wrapper","Jumbotron","Counter","_","tiles","React","App","Component","state","score","random","randomFunc","Math","floor","tilesTransformed","map","tile","sortNum","sortedTiles","sortBy","setState","handleClick","objectid","index","findIndex","x","id","chosen","console","log","alert","componentDidMount","bind","render","current","high","name","image"],"mappings":"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","sourcesContent":["import Tile from \"./components/Tile\";\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Counter from \"./components/Counter\";\nimport _ from \"lodash\";\n\nimport tiles from \"./tiles.json\";\nimport React from 'react';\n// import logo from './logo.svg';\nimport './index.css';\n\nclass App extends React.Component {\n  state = {\n    score: 0,\n    tiles\n  }\n  componentDidMount() {\n    this.random();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  random = () => {\n    let randomFunc = () => {\n      return Math.floor(Math.random() * 100)\n    }\n    let tilesTransformed = this.state.tiles;\n    tilesTransformed.map(tile => {\n      tile.sortNum = randomFunc();\n      return tile;\n    });\n    let sortedTiles = _.sortBy(tilesTransformed, ['sortNum']);\n\n    this.setState({ tiles: sortedTiles})\n  }\n  \n\n  handleClick = (objectid) => {\n    let index = this.state.tiles.findIndex(x => x.id === objectid);\n    if (!this.state.tiles[index].chosen) {\n      this.state.tiles[index].chosen = true\n      this.setState( {tiles} );\n      console.log(this.state.tiles[index]);\n      this.setState( {score: score + 1})\n      console.log(this.state.score)\n      this.random();\n    } else {\n      alert(\"already guessed!\")\n\n    }\n\n    // this.state.tiles[index].chosen = true;\n    }\n\n  render() {\n    return (\n      <div>\n      <Counter current={this.state.current} high={this.state.high} />\n      <Jumbotron /> \n      <Wrapper>\n        {this.state.tiles.map(tiles => (\n            <Tile\n            id={tiles.id}\n            key={tiles.id}\n            name={tiles.name}\n            image={tiles.image}\n            chosen={tiles.chosen}\n            onClick={ () => this.handleClick(tiles.id) }\n          />\n        ))}\n      </Wrapper>\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}